var searchIndex = JSON.parse('{\
"slos":{"doc":"","t":[3,3,4,6,13,13,0,11,11,11,11,11,11,0,5,11,11,0,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,12,3,16,3,8,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,7,17,17,7,11,11,11,11,5,11,11,5,5,11,11,11,3,11,11,11,0,5,11,5,11,11,11,11,11,3,3,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11],"n":["KMAIN_INIT_PARTIALS","KMAIN_LOOP_PARTIALS","KernelError","KmainPartial","MountError","Unknown","alloc_prelude","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clock","current_system","deref","deref","filesystem","fmt","fmt","from","from","from","from","initialize","initialize","into","into","into","kmain","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","Box","Owned","String","ToOwned","ToString","Vec","add","add_assign","allocator","allocator","append","as_bytes","as_mut","as_mut","as_mut","as_mut","as_mut_ptr","as_mut_slice","as_mut_str","as_mut_vec","as_ptr","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_slice","as_str","assume_init","assume_init","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call_mut","call_once","capacity","capacity","cause","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone_from","clone_from","clone_from","clone_from","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","consume","contains","contains_key","dedup","dedup_by","dedup_by_key","default","default","default","default","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","downcast","downcast","downcast","drain","drain","drain_filter","drop","drop","enabled","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","extend","extend","extend","extend","extend","extend","extend_from_slice","extend_from_within","extend_from_within","extend_one","extend_one","extend_one","extend_one","extend_one","extend_one","extend_one","extend_reserve","extend_reserve","extend_reserve","extend_reserve","fill_buf","finish","flush","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_raw","from_raw_in","from_raw_parts","from_raw_parts","from_raw_parts_in","from_str","from_utf16","from_utf16_lossy","from_utf8","from_utf8_lossy","from_utf8_unchecked","ge","get","get_hash","get_hash","get_hash","get_hash","get_hash","get_or_intern","get_or_intern_static","gt","hash","hash","hash","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","initializer","insert","insert","insert_str","into","into","into","into_boxed_slice","into_boxed_slice","into_boxed_str","into_bytes","into_future","into_inner","into_iter","into_iter","into_pin","into_raw","into_raw_parts","into_raw_parts","into_raw_parts_with_alloc","into_raw_with_allocator","into_reader","into_reader_boxed","into_resolver","into_resolver_boxed","into_searcher","is_contained_in","is_empty","is_empty","is_empty","is_prefix_of","is_read_vectored","is_suffix_of","is_write_vectored","is_write_vectored","last","le","leak","leak","len","len","len","len","log","lt","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new_in","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","next_back","nth","nth_back","partial_cmp","partial_cmp","partial_cmp","pin","pin_in","poll","poll_next","pop","pop","push","push","push_str","read","read_exact","read_line","read_to_end","read_to_string","read_until","read_vectored","remove","remove","remove_matches","replace_range","reserve","reserve","reserve_exact","reserve_exact","resize","resize_with","resolve","resolve_unchecked","resume","retain","retain","seek","set_len","shrink_to","shrink_to","shrink_to_fit","shrink_to_fit","size_hint","size_hint","source","spare_capacity_mut","splice","split_at_spare_mut","split_off","split_off","stream_position","strip_prefix_of","strip_suffix_of","swap_remove","to_owned","to_owned","to_owned","to_owned","to_socket_addrs","to_string","to_string","to_string","to_string","truncate","truncate","try_from","try_from","try_from","try_from","try_get_or_intern","try_get_or_intern_static","try_into","try_into","try_into","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_uninit_slice","try_new_zeroed","try_new_zeroed_in","try_new_zeroed_slice","try_reserve","try_reserve","try_reserve_exact","try_reserve_exact","try_resolve","type_id","type_id","type_id","with_capacity","with_capacity","with_capacity_in","write","write","write","write_all","write_all","write_char","write_fmt","write_i128","write_i16","write_i32","write_i64","write_i8","write_isize","write_str","write_u128","write_u16","write_u32","write_u64","write_u8","write_usize","write_vectored","write_vectored","BOOT_CLOCK","CLOCK_TICK_WARN_COUNT","CLOCK_TICK_WARN_MS","CLOCK_TICK_WARN_THRESHOLD","CLOCK_UNSTABLE","borrow","borrow_mut","deref","from","init","initialize","into","on_tick","treat_as_unstable","try_from","try_into","type_id","FSBASE","borrow","borrow_mut","deref","devices","fopen","from","init","initialize","into","try_from","try_into","type_id","SystemDeviceCollection","SystemDeviceFile","borrow","borrow","borrow_mut","borrow_mut","devices","fmt","fmt","from","from","inode","inode","inode","into","into","mount","mount","name","name","name","new","open","permissions","permissions","push","readdir","system_devices","touch","try_directory","try_directory","try_file","try_file","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["slos","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","slos::KernelError","slos::alloc_prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","slos::clock","","","","","","","","","","","","","","","","","slos::filesystem","","","","","","","","","","","","","slos::filesystem::devices","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Collection of <code>KmainPartial</code> callbacks, called before the …","Collection of <code>KmainPartial</code> callbacks, called each …","Fatal kernel errors","Callback type for <code>kmain</code> inner functions","Bubbled filesystem mount error","Unknown error","The first version of the prelude of <code>alloc</code> crate.","","","","","","","Kernel timekeeping","Returns the <code>SystemHardware</code> implementation for the running …","","","Global filesystem handling","","","","","","","","","","","","Kernel main function","","","","","","","","","","","","A pointer type for heap allocation.","The resulting type after obtaining ownership.","A UTF-8–encoded, growable string.","A generalization of <code>Clone</code> to borrowed data.","A trait for converting a value to a <code>String</code>.","A contiguous growable array type, written as <code>Vec&lt;T&gt;</code> and …","","","Returns a reference to the underlying allocator.","Returns a reference to the underlying allocator.","Moves all the elements of <code>other</code> into <code>Self</code>, leaving <code>other</code> …","Returns a byte slice of this <code>String</code>’s contents.","","","","","Returns an unsafe mutable pointer to the vector’s …","Extracts a mutable slice of the entire vector.","Converts a <code>String</code> into a mutable string slice.","Returns a mutable reference to the contents of this <code>String</code>…","Returns a raw pointer to the vector’s buffer.","","","","","","","","Extracts a slice containing the entire vector.","Extracts a string slice containing the entire <code>String</code>.","Converts to <code>Box&lt;T, A&gt;</code>.","Converts to <code>Box&lt;[T], A&gt;</code>.","","","","","","","","","","","","","","","","Returns the number of elements the vector can hold without…","Returns this <code>String</code>’s capacity, in bytes.","","Clears the vector, removing all values.","Truncates this <code>String</code>, removing all contents.","","","","","Returns a new box with a <code>clone()</code> of this box’s contents.","","","","","Copies <code>source</code>’s contents into <code>self</code> without creating a …","","","","Uses borrowed data to replace owned data, usually by …","","","","","","","","","Removes consecutive repeated elements in the vector …","Removes all but the first of consecutive elements in the …","Removes all but the first of consecutive elements in the …","","","","Creates a <code>Box&lt;T&gt;</code>, with the <code>Default</code> value for T.","","Creates an empty <code>Vec&lt;T&gt;</code>.","Creates an empty <code>String</code>.","","","","","","","","Attempt to downcast the box to a concrete type.","Attempt to downcast the box to a concrete type.","Attempt to downcast the box to a concrete type.","Creates a draining iterator that removes the specified …","Creates a draining iterator that removes the specified …","Creates an iterator which uses a closure to determine if …","","","","","","","","","","","","","","","","","","","","","","","Clones and appends all elements in a slice to the <code>Vec</code>.","Copies elements from <code>src</code> range to the end of the vector.","Copies elements from <code>src</code> range to the end of the string.","","","","","","","","","","","","","","","","","","","","","","","Converts a <code>Cow</code> into a box of dyn <code>Error</code>.","","","Converts a [<code>String</code>] into a box of dyn <code>Error</code> + <code>Send</code> + <code>Sync</code>.","Converts a <code>str</code> into a box of dyn <code>Error</code> + <code>Send</code> + <code>Sync</code>.","Converts a <code>[T; N]</code> into a <code>Box&lt;[T]&gt;</code>","Converts a <code>&amp;str</code> into a <code>Box&lt;str&gt;</code>","","Converts a [<code>String</code>] into a box of dyn <code>Error</code>.","","Converts a <code>Cow</code> into a box of dyn <code>Error</code> + <code>Send</code> + <code>Sync</code>.","","Converts the given <code>String</code> to a boxed <code>str</code> slice that is …","Converts a <code>OsString</code> into a [<code>Box</code>]<code>&lt;OsStr&gt;</code> without copying …","Creates a boxed <code>Path</code> from a clone-on-write pointer.","Convert a vector into a boxed slice.","Converts a <code>str</code> into a box of dyn <code>Error</code>.","Converts a <code>PathBuf</code> into a <code>Box&lt;Path&gt;</code>","Converts a <code>&amp;[T]</code> into a <code>Box&lt;[T]&gt;</code>","Converts a <code>T</code> into a <code>Box&lt;T&gt;</code>","Converts a type of <code>Error</code> into a box of dyn <code>Error</code>.","","","Creates a boxed <code>Path</code> from a reference.","","Converts a type of <code>Error</code> + <code>Send</code> + <code>Sync</code> into a box of dyn …","Converts a <code>CString</code> into a [<code>Box</code>]<code>&lt;CStr&gt;</code> without copying or …","Converts a <code>Box&lt;str&gt;</code> into a <code>Box&lt;[u8]&gt;</code>","Allocate a <code>Vec&lt;T&gt;</code> and fill it by cloning <code>s</code>’s items.","Allocate a <code>Vec&lt;u8&gt;</code> and fill it with a UTF-8 string.","Convert a boxed slice into a vector by transferring …","","Allocate a <code>Vec&lt;T&gt;</code> and fill it by cloning <code>s</code>’s items.","","Converts the given <code>String</code> to a vector <code>Vec</code> that holds …","Turn a <code>VecDeque&lt;T&gt;</code> into a <code>Vec&lt;T&gt;</code>.","Converts a <code>CString</code> into a [<code>Vec</code>]<code>&lt;u8&gt;</code>.","Convert a clone-on-write slice into a vector.","Converts a <code>BinaryHeap&lt;T&gt;</code> into a <code>Vec&lt;T&gt;</code>.","Converts the given boxed <code>str</code> slice to a <code>String</code>. It is …","Converts a <code>&amp;str</code> into a <code>String</code>.","Allocates an owned <code>String</code> from a single character.","Converts a <code>&amp;mut str</code> into a <code>String</code>.","Converts a <code>&amp;String</code> into a <code>String</code>.","","Converts a clone-on-write string to an owned instance of …","","","","","","","","","Constructs a box from a raw pointer.","Constructs a box from a raw pointer in the given …","Creates a <code>Vec&lt;T&gt;</code> directly from the raw components of …","Creates a new <code>String</code> from a length, capacity, and pointer.","Creates a <code>Vec&lt;T, A&gt;</code> directly from the raw components of …","","Decode a UTF-16–encoded vector <code>v</code> into a <code>String</code>, …","Decode a UTF-16–encoded slice <code>v</code> into a <code>String</code>, replacing…","Converts a vector of bytes to a <code>String</code>.","Converts a slice of bytes to a string, including invalid …","Converts a vector of bytes to a <code>String</code> without checking …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inserts an element at position <code>index</code> within the vector, …","Inserts a character into this <code>String</code> at a byte position.","Inserts a string slice into this <code>String</code> at a byte …","","","","Converts a <code>Box&lt;T&gt;</code> into a <code>Box&lt;[T]&gt;</code>","Converts the vector into <code>Box&lt;[T]&gt;</code>.","Converts this <code>String</code> into a <code>Box</code><code>&lt;</code><code>str</code><code>&gt;</code>.","Converts a <code>String</code> into a byte vector.","","Consumes the <code>Box</code>, returning the wrapped value.","","Creates a consuming iterator, that is, one that moves …","Converts a <code>Box&lt;T&gt;</code> into a <code>Pin&lt;Box&lt;T&gt;&gt;</code>","Consumes the <code>Box</code>, returning a wrapped raw pointer.","Decomposes a <code>Vec&lt;T&gt;</code> into its raw components.","Decomposes a <code>String</code> into its raw components.","Decomposes a <code>Vec&lt;T&gt;</code> into its raw components.","Consumes the <code>Box</code>, returning a wrapped raw pointer and the …","","","","","","","","Returns <code>true</code> if the vector contains no elements.","Returns <code>true</code> if this <code>String</code> has a length of zero, and …","","","","","","","","Consumes and leaks the <code>Box</code>, returning a mutable reference,…","Consumes and leaks the <code>Vec</code>, returning a mutable reference …","","","Returns the number of elements in the vector, also …","Returns the length of this <code>String</code>, in bytes, not <code>char</code>s or …","","","","","","","","","","","","","","Allocates memory on the heap and then places <code>x</code> into it.","Constructs a new, empty <code>Vec&lt;T&gt;</code>.","Creates a new empty <code>String</code>.","Allocates memory in the given allocator then places <code>x</code> …","Constructs a new, empty <code>Vec&lt;T, A&gt;</code>.","Constructs a new box with uninitialized contents.","Constructs a new box with uninitialized contents in the …","Constructs a new boxed slice with uninitialized contents.","Constructs a new boxed slice with uninitialized contents …","Constructs a new <code>Box</code> with uninitialized contents, with …","Constructs a new <code>Box</code> with uninitialized contents, with …","Constructs a new boxed slice with uninitialized contents, …","Constructs a new boxed slice with uninitialized contents …","","","","","","","","Constructs a new <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not implement …","Constructs a new <code>Pin&lt;Box&lt;T, A&gt;&gt;</code>. If <code>T</code> does not implement …","","","Removes the last element from a vector and returns it, or …","Removes the last character from the string buffer and …","Appends an element to the back of a collection.","Appends the given <code>char</code> to the end of this <code>String</code>.","Appends a given string slice onto the end of this <code>String</code>.","","","","","","","","Removes and returns the element at position <code>index</code> within …","Removes a <code>char</code> from this <code>String</code> at a byte position and …","Remove all matches of pattern <code>pat</code> in the <code>String</code>.","Removes the specified range in the string, and replaces …","Reserves capacity for at least <code>additional</code> more elements …","Ensures that this <code>String</code>’s capacity is at least …","Reserves the minimum capacity for exactly <code>additional</code> more …","Ensures that this <code>String</code>’s capacity is <code>additional</code> bytes …","Resizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.","Resizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.","","","","Retains only the elements specified by the predicate.","Retains only the characters specified by the predicate.","","Forces the length of the vector to <code>new_len</code>.","Shrinks the capacity of the vector with a lower bound.","Shrinks the capacity of this <code>String</code> with a lower bound.","Shrinks the capacity of the vector as much as possible.","Shrinks the capacity of this <code>String</code> to match its length.","","","","Returns the remaining spare capacity of the vector as a …","Creates a splicing iterator that replaces the specified …","Returns vector content as a slice of <code>T</code>, along with the …","Splits the collection into two at the given index.","Splits the string into two at the given byte index.","","","","Removes an element from the vector and returns it.","Creates owned data from borrowed data, usually by cloning.","","","","","Converts the given value to a <code>String</code>.","","","","Shortens the vector, keeping the first <code>len</code> elements and …","Shortens this <code>String</code> to the specified length.","","","","","","","","","","Allocates memory on the heap then places <code>x</code> into it, …","Allocates memory in the given allocator then places <code>x</code> …","Constructs a new box with uninitialized contents on the …","Constructs a new box with uninitialized contents in the …","Constructs a new boxed slice with uninitialized contents. …","Constructs a new <code>Box</code> with uninitialized contents, with …","Constructs a new <code>Box</code> with uninitialized contents, with …","Constructs a new boxed slice with uninitialized contents, …","Tries to reserve capacity for at least <code>additional</code> more …","Tries to reserve capacity for at least <code>additional</code> more …","Tries to reserve the minimum capacity for exactly …","Tries to reserve the minimum capacity for exactly …","","","","","Constructs a new, empty <code>Vec&lt;T&gt;</code> with the specified …","Creates a new empty <code>String</code> with a particular capacity.","Constructs a new, empty <code>Vec&lt;T, A&gt;</code> with the specified …","","","","","","","","","","","","","","","","","","","","","","","Time since system boot","Current number of warnings","Warn if the clock increases more than this time (in …","If <code>CLOCK_TICK_WARN_COUNT</code> &gt;= this value, set <code>CLOCK_UNSTABLE</code>","Whether to treat the system clock as unstable","","","","","Initialize the system timers","","","Tick the clock","Set the system clock as unstable","","","","Filesystem base used by the kernel","","","","Filesystem device node helpers","Open a file somewhere on the filesystem, returning a …","","Initialize the filesystem handlers","","","","","","Collection for core system device nodes to be presented …","A system device node to be presented to the filesystem","","","","","Devices to present to the filesystem","","","","","","","File inode","","","","","","","File name","","","","","","","Return a populated <code>SystemDeviceCollection</code>","","","","","","","","","","",""],"i":[0,0,0,0,1,1,0,1,2,3,1,2,3,0,0,2,3,0,1,1,1,1,2,3,2,3,1,2,3,0,1,1,2,3,1,2,3,1,2,3,4,0,5,0,0,0,0,6,6,7,8,8,6,7,8,8,6,8,8,6,6,8,7,8,8,6,6,6,6,8,6,7,7,7,7,8,8,6,6,7,7,8,8,6,6,7,7,7,8,6,7,8,6,7,7,7,7,7,7,8,6,7,7,8,6,7,5,8,6,7,8,6,7,7,7,8,8,8,7,7,7,7,7,8,6,7,8,6,7,8,6,7,7,7,7,8,6,8,7,8,7,7,8,8,8,8,8,8,6,6,6,6,8,8,6,6,6,6,6,6,8,8,6,8,8,6,6,6,6,6,8,8,6,6,7,7,7,7,8,7,7,7,8,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,6,6,6,6,6,6,6,7,8,6,6,6,6,6,6,7,7,8,6,8,6,6,6,6,6,6,7,7,7,8,8,6,6,7,7,7,7,8,6,8,6,6,6,6,6,6,8,6,6,6,6,6,6,7,8,6,6,7,8,6,7,8,6,6,7,7,7,8,7,7,8,6,8,7,7,7,7,7,7,7,7,8,6,7,7,7,7,8,7,7,7,8,7,7,8,6,7,7,7,8,8,8,8,8,8,6,6,6,6,7,8,6,7,8,7,7,7,7,7,7,7,7,7,7,7,7,7,8,6,7,7,7,7,8,6,8,6,6,7,7,7,7,7,7,7,8,6,6,6,8,6,8,6,8,8,7,7,7,8,6,7,8,8,6,8,6,7,7,7,8,8,8,8,6,7,7,7,8,5,7,8,6,6,9,7,6,6,8,6,7,7,8,6,7,7,7,8,6,7,7,7,7,7,7,7,7,8,6,8,6,7,7,8,6,8,6,8,7,7,8,7,8,6,7,7,7,7,7,7,7,6,7,7,7,7,7,7,7,8,0,0,0,0,0,10,10,10,10,0,10,10,0,0,10,10,10,0,11,11,11,0,0,11,0,11,11,11,11,11,0,0,12,13,12,13,13,12,13,12,13,12,13,12,12,13,12,13,12,13,12,13,12,12,13,13,13,0,13,12,13,12,13,12,13,12,13,12,13],"f":[null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["systemhardware",8]],[[],["staticcollection",3]],[[],["staticcollection",3]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["mounterror",4]],["kernelerror",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["systemhardware",8]],[["result",4,["kernelerror"]],["kernelerror",4]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,[[["str",15]],["string",3]],[[["str",15]]],[[["box",3]]],[[]],[[["vec",3]]],[[]],[[]],[[],["vec",3]],[[]],[[],["str",15]],[[]],[[]],[[],["str",15]],[[],["vec",3]],[[]],[[]],[[]],[[],["vec",3]],[[],["path",3]],[[],["osstr",3]],[[]],[[],["str",15]],[[]],[[],["str",15]],[[],["box",3]],[[],["box",3]],[[]],[[]],[[]],[[]],[[]],[[],["str",15]],[[]],[[]],[[]],[[]],[[],["str",15]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],[["option",4,["error"]],["error",8]]],[[]],[[]],[[],[["osstr",3],["global",3],["box",3,["osstr","global"]]]],[[],[["box",3,["cstr","global"]],["cstr",3],["global",3]]],[[],["box",3]],[[],[["box",3,["path","global"]],["path",3],["global",3]]],[[],["box",3]],[[],[["box",3,["str","global"]],["str",15],["global",3]]],[[],["vec",3]],[[],["string",3]],[[["box",3]]],[[["box",3]]],[[["vec",3]]],[[["string",3]]],[[]],[[]],[[]],[[]],[[["box",3]],["ordering",4]],[[["vec",3]],["ordering",4]],[[["string",3]],["ordering",4]],[[["usize",15]]],[[["str",15]],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[],[["box",3,["global"]],["global",3]]],[[],[["box",3,["cstr","global"]],["cstr",3],["global",3]]],[[],[["osstr",3],["global",3],["box",3,["osstr","global"]]]],[[],[["global",3],["box",3,["global"]]]],[[],[["box",3,["str","global"]],["str",15],["global",3]]],[[],[["global",3],["vec",3,["global"]]]],[[],["string",3]],[[]],[[]],[[],["str",15]],[[]],[[]],[[],["str",15]],[[],["str",15]],[[],[["box",3,["any"]],["result",4,["box","box"]],["box",3]]],[[],[["box",3,["any"]],["result",4,["box","box"]],["box",3]]],[[],[["box",3,["any"]],["result",4,["box","box"]],["box",3]]],[[],["drain",3]],[[],["drain",3]],[[],["drainfilter",3]],[[]],[[]],[[["metadata",3]],["bool",15]],[[["box",3]],["bool",15]],[[],["bool",15]],[[["vec",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["str",15]],["bool",15]],[[],["bool",15]],[[["cow",4]],["bool",15]],[[["string",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["string",3]]],[[["str",15]]],[[["cow",4,["str"]],["str",15]]],[[["char",15]]],[[["char",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],[["result",4,["error"]],["error",3]]],[[],["u64",15]],[[]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["cow",4,["str"]],["str",15]],[["global",3],["box",3,["error","global"]],["error",8]]],[[]],[[["osstr",3]],[["osstr",3],["global",3],["box",3,["osstr","global"]]]],[[["string",3]],[["error",8],["global",3],["box",3,["error","global"]]]],[[["str",15]],[["error",8],["global",3],["box",3,["error","global"]]]],[[],[["box",3,["global"]],["global",3]]],[[["str",15]],[["box",3,["str","global"]],["str",15],["global",3]]],[[]],[[["string",3]],[["global",3],["box",3,["error","global"]],["error",8]]],[[["cow",4]],[["box",3,["global"]],["global",3]]],[[["cow",4,["str"]],["str",15]],[["error",8],["global",3],["box",3,["error","global"]]]],[[["cow",4,["str"]],["str",15]],[["box",3,["str","global"]],["str",15],["global",3]]],[[["string",3]],[["box",3,["str","global"]],["str",15],["global",3]]],[[["osstring",3]],[["osstr",3],["global",3],["box",3,["osstr","global"]]]],[[["cow",4,["path"]],["path",3]],[["box",3,["path","global"]],["path",3],["global",3]]],[[["vec",3]],["box",3]],[[["str",15]],[["global",3],["box",3,["error","global"]],["error",8]]],[[["pathbuf",3]],[["box",3,["path","global"]],["path",3],["global",3]]],[[],[["box",3,["global"]],["global",3]]],[[],[["global",3],["box",3,["global"]]]],[[],[["box",3,["error","global"]],["error",8],["global",3]]],[[["cstr",3]],[["box",3,["cstr","global"]],["cstr",3],["global",3]]],[[["cow",4,["cstr"]],["cstr",3]],[["box",3,["cstr","global"]],["cstr",3],["global",3]]],[[["path",3]],[["box",3,["path","global"]],["path",3],["global",3]]],[[["cow",4,["osstr"]],["osstr",3]],[["osstr",3],["global",3],["box",3,["osstr","global"]]]],[[],[["error",8],["global",3],["box",3,["error","global"]]]],[[["cstring",3]],[["box",3,["cstr","global"]],["cstr",3],["global",3]]],[[["str",15],["box",3,["str"]]],["box",3]],[[],[["global",3],["vec",3,["global"]]]],[[["str",15]],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[["box",3]],["vec",3]],[[]],[[],[["global",3],["vec",3,["global"]]]],[[],[["global",3],["vec",3,["global"]]]],[[["string",3]],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[["vecdeque",3]],["vec",3]],[[["cstring",3]],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[["cow",4]],[["global",3],["vec",3,["global"]]]],[[["binaryheap",3]],[["global",3],["vec",3,["global"]]]],[[["box",3,["str","global"]],["str",15],["global",3]],["string",3]],[[["str",15]],["string",3]],[[["char",15]],["string",3]],[[["str",15]],["string",3]],[[["string",3]],["string",3]],[[]],[[["cow",4,["str"]],["str",15]],["string",3]],[[],[["box",3,["global"]],["global",3]]],[[],[["global",3],["vec",3,["global"]]]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],[["global",3],["box",3,["global"]]]],[[],["box",3]],[[["usize",15]],[["global",3],["vec",3,["global"]]]],[[["usize",15]],["string",3]],[[["usize",15]],["vec",3]],[[["str",15]],[["string",3],["result",4,["string"]]]],[[],[["result",4,["string","fromutf16error"]],["string",3],["fromutf16error",3]]],[[],["string",3]],[[["vec",3,["u8","global"]],["u8",15],["global",3]],[["string",3],["fromutf8error",3],["result",4,["string","fromutf8error"]]]],[[],[["cow",4,["str"]],["str",15]]],[[["vec",3,["u8","global"]],["u8",15],["global",3]],["string",3]],[[["box",3]],["bool",15]],[[["str",15]],["option",4]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[["str",15]]],[[["str",15]]],[[["box",3]],["bool",15]],[[]],[[]],[[]],[[]],[[["usize",15],["rangefrom",3,["usize"]]],["str",15]],[[["rangeinclusive",3,["usize"]],["usize",15]],["str",15]],[[["usize",15],["rangetoinclusive",3,["usize"]]],["str",15]],[[["rangefull",3]],["str",15]],[[["rangeto",3,["usize"]],["usize",15]],["str",15]],[[["usize",15],["range",3,["usize"]]],["str",15]],[[]],[[["usize",15],["rangetoinclusive",3,["usize"]]],["str",15]],[[["usize",15],["rangefrom",3,["usize"]]],["str",15]],[[["rangeinclusive",3,["usize"]],["usize",15]],["str",15]],[[["rangefull",3]],["str",15]],[[["rangeto",3,["usize"]],["usize",15]],["str",15]],[[["usize",15],["range",3,["usize"]]],["str",15]],[[],["initializer",3]],[[["usize",15]]],[[["usize",15],["char",15]]],[[["usize",15],["str",15]]],[[]],[[]],[[]],[[["box",3]],["box",3]],[[],["box",3]],[[],[["box",3,["str","global"]],["str",15],["global",3]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[]],[[["box",3]]],[[]],[[],["intoiter",3]],[[["box",3]],[["pin",3,["box"]],["box",3]]],[[["box",3]]],[[]],[[]],[[]],[[["box",3]]],[[]],[[["box",3,["box","global"]],["box",3,["global"]],["global",3]]],[[]],[[["box",3,["box","global"]],["box",3,["global"]],["global",3]]],[[["str",15]],["charpredicatesearcher",3]],[[["str",15]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["str",15]],["bool",15]],[[],["bool",15]],[[["str",15]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["option",4]],[[["box",3]],["bool",15]],[[["box",3]]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["record",3]]],[[["box",3]],["bool",15]],[[["box",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["vec",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["str",15]],["bool",15]],[[["string",3]],["bool",15]],[[],["bool",15]],[[["cow",4]],["bool",15]],[[],[["global",3],["box",3,["global"]]]],[[],[["global",3],["vec",3,["global"]]]],[[],["string",3]],[[],["box",3]],[[],["vec",3]],[[],[["box",3,["maybeuninit","global"]],["maybeuninit",19],["global",3]]],[[],[["box",3,["maybeuninit"]],["maybeuninit",19]]],[[["usize",15]],[["global",3],["box",3,["global"]]]],[[["usize",15]],["box",3]],[[],[["box",3,["maybeuninit","global"]],["maybeuninit",19],["global",3]]],[[],[["box",3,["maybeuninit"]],["maybeuninit",19]]],[[["usize",15]],[["global",3],["box",3,["global"]]]],[[["usize",15]],["box",3]],[[],["option",4]],[[],["option",4]],[[["usize",15]],["option",4]],[[["usize",15]],["option",4]],[[["box",3]],[["ordering",4],["option",4,["ordering"]]]],[[["vec",3]],[["ordering",4],["option",4,["ordering"]]]],[[["string",3]],[["ordering",4],["option",4,["ordering"]]]],[[],[["box",3,["global"]],["pin",3,["box"]]]],[[],[["pin",3,["box"]],["box",3]]],[[["box",3],["pin",3,["box"]],["context",3]],["poll",4]],[[["box",3],["context",3],["pin",3,["box"]]],[["option",4],["poll",4,["option"]]]],[[],["option",4]],[[],[["option",4,["char"]],["char",15]]],[[]],[[["char",15]]],[[["str",15]]],[[],[["usize",15],["error",3],["result",4,["usize","error"]]]],[[],[["error",3],["result",4,["error"]]]],[[["string",3]],[["usize",15],["error",3],["result",4,["usize","error"]]]],[[["vec",3]],[["usize",15],["error",3],["result",4,["usize","error"]]]],[[["string",3]],[["usize",15],["error",3],["result",4,["usize","error"]]]],[[["u8",15],["vec",3]],[["usize",15],["error",3],["result",4,["usize","error"]]]],[[],[["usize",15],["error",3],["result",4,["usize","error"]]]],[[["usize",15]]],[[["usize",15]],["char",15]],[[]],[[["str",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["str",15]],[[],["str",15]],[[["box",3],["pin",3,["box"]]],["generatorstate",4]],[[]],[[]],[[["seekfrom",4]],[["u64",15],["error",3],["result",4,["u64","error"]]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],[["error",8],["option",4,["error"]]]],[[]],[[],["splice",3]],[[]],[[["usize",15]],["vec",3]],[[["usize",15]],["string",3]],[[],[["u64",15],["error",3],["result",4,["u64","error"]]]],[[["str",15]],[["option",4,["str"]],["str",15]]],[[["str",15]],[["option",4,["str"]],["str",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],[["result",4,["intoiter","error"]],["intoiter",3,["socketaddr","global"]],["error",3]]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[["usize",15]]],[[["usize",15]]],[[["box",3,["global"]],["global",3]],[["box",3,["global"]],["result",4,["box"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],[["lassoerror",3],["result",4,["lassoerror"]]]],[[["str",15]],[["lassoerror",3],["result",4,["lassoerror"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["box","allocerror"]],["box",3,["global"]],["allocerror",3]]],[[],[["result",4,["box","allocerror"]],["allocerror",3],["box",3]]],[[],[["box",3,["maybeuninit","global"]],["allocerror",3],["result",4,["box","allocerror"]]]],[[],[["result",4,["box","allocerror"]],["box",3,["maybeuninit"]],["allocerror",3]]],[[["usize",15]],[["result",4,["box","allocerror"]],["box",3,["global"]],["allocerror",3]]],[[],[["box",3,["maybeuninit","global"]],["allocerror",3],["result",4,["box","allocerror"]]]],[[],[["result",4,["box","allocerror"]],["box",3,["maybeuninit"]],["allocerror",3]]],[[["usize",15]],[["result",4,["box","allocerror"]],["box",3,["global"]],["allocerror",3]]],[[["usize",15]],[["result",4,["tryreserveerror"]],["tryreserveerror",3]]],[[["usize",15]],[["result",4,["tryreserveerror"]],["tryreserveerror",3]]],[[["usize",15]],[["result",4,["tryreserveerror"]],["tryreserveerror",3]]],[[["usize",15]],[["result",4,["tryreserveerror"]],["tryreserveerror",3]]],[[],[["option",4,["str"]],["str",15]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["usize",15]],[["global",3],["vec",3,["global"]]]],[[["usize",15]],["string",3]],[[["usize",15]],["vec",3]],[[]],[[],[["usize",15],["error",3],["result",4,["usize","error"]]]],[[],[["usize",15],["error",3],["result",4,["usize","error"]]]],[[],[["error",3],["result",4,["error"]]]],[[],[["error",3],["result",4,["error"]]]],[[["char",15]],[["result",4,["error"]],["error",3]]],[[["arguments",3]],[["error",3],["result",4,["error"]]]],[[["i128",15]]],[[["i16",15]]],[[["i32",15]]],[[["i64",15]]],[[["i8",15]]],[[["isize",15]]],[[["str",15]],[["result",4,["error"]],["error",3]]],[[["u128",15]]],[[["u16",15]]],[[["u32",15]]],[[["u64",15]]],[[["u8",15]]],[[["usize",15]]],[[],[["usize",15],["error",3],["result",4,["usize","error"]]]],[[],[["usize",15],["error",3],["result",4,["usize","error"]]]],null,null,null,null,null,[[]],[[]],[[],["unsafecontainer",3]],[[]],[[],[["result",4,["kernelerror"]],["kernelerror",4]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],[[],["unsafecontainer",3]],null,[[["str",15]],[["fserror",4],["result",4,["fsfilehandle","fserror"]],["fsfilehandle",8]]],[[]],[[],[["result",4,["kernelerror"]],["kernelerror",4]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],null,[[]],[[]],[[],[["fsroot",8],["option",4,["fsroot"]]]],[[],[["fsroot",8],["option",4,["fsroot"]]]],[[],["str",15]],[[],["str",15]],null,[[]],[[],[["fsfilehandle",8],["fserror",4],["result",4,["fsfilehandle","fserror"]]]],[[],["u16",15]],[[],["u16",15]],[[["systemdevicefile",3]]],[[],[["vec",3,["fsnode"]],["result",4,["vec","fserror"]],["fserror",4]]],[[],["systemdevicecollection",3]],[[["str",15]],[["result",4,["fsnode","fserror"]],["fserror",4],["fsnode",8]]],[[],[["fsdirectory",8],["option",4,["fsdirectory"]]]],[[],[["fsdirectory",8],["option",4,["fsdirectory"]]]],[[],[["fsfile",8],["option",4,["fsfile"]]]],[[],[["fsfile",8],["option",4,["fsfile"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[4,"KernelError"],[3,"KMAIN_INIT_PARTIALS"],[3,"KMAIN_LOOP_PARTIALS"],[13,"MountError"],[8,"ToOwned"],[3,"String"],[3,"Box"],[3,"Vec"],[8,"ToString"],[3,"BOOT_CLOCK"],[3,"FSBASE"],[3,"SystemDeviceFile"],[3,"SystemDeviceCollection"]]},\
"slos_filesystem":{"doc":"","t":[13,13,13,3,3,13,8,4,8,8,8,8,8,8,13,4,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,0,10,11,12,10,11,11,10,0,12,11,10,10,10,10,12,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,5,5,5],"n":["EndOfFile","FileExists","FileNotFound","FilesystemBase","FilesystemMountpoint","FilesystemRootError","FsDirectory","FsError","FsFile","FsFileHandle","FsNode","FsReadDir","FsRoot","FsWriteDir","InvalidArgument","MountError","OpenHandleExists","PermissionDenied","PermissionDenied","StdIoError","Unknown","Unknown","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","inode","into","into","into","into","memory","mount","mount","mountpoints","name","new","node_at_path","open","path","path","path_vec","permissions","raw_read","raw_write","readdir","root","to_string","to_string","touch","try_directory","try_file","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","0","SimpleMemoryFs","SimpleMemoryFsFile","borrow","borrow","borrow_mut","borrow_mut","content","current_inode","default","eq","eq","files","fmt","fmt","from","from","inode","inode","inode","into","into","mount","mount","name","name","name","ne","ne","new","open","parent_index","permissions","permissions","raw_read","raw_write","readdir","touch","try_directory","try_directory","try_file","try_file","try_from","try_from","try_into","try_into","type_id","type_id","PATH_SEPARATOR","join","normalize","split"],"q":["slos_filesystem","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","slos_filesystem::FsError","slos_filesystem::memory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","slos_filesystem::path","","",""],"d":["End of file reached (possibly unexpectedly)","A file with a duplicate name already exists","File not found","","","Filesystem root error (possibly set to None)","","","","","","","","","Invalid argument","","File already has an open handle","Permission denied","Permission denied","IO error: {0}","Unknown error","Unknown error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,1,1,0,0,1,0,0,0,0,0,0,0,0,1,0,1,1,2,1,1,2,1,2,3,4,1,2,3,4,3,1,1,2,2,3,4,1,1,2,3,4,5,1,2,3,4,0,5,4,4,5,4,4,6,0,3,3,5,7,7,8,3,1,2,9,5,5,1,2,3,4,1,2,3,4,1,2,3,4,10,0,0,11,12,11,12,12,11,12,11,12,11,11,12,11,12,11,12,12,11,12,11,12,11,12,12,11,12,11,12,12,11,12,12,12,11,11,11,12,11,12,11,12,11,12,11,12,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["filesystemmountpoint",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["error",3]],["fserror",4]],[[]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[]],[[]],null,[[],[["fsroot",8],["option",4,["fsroot"]]]],[[["fsroot",8],["box",3,["fsroot"]]],[["mounterror",4],["result",4,["mounterror"]]]],null,[[],["str",15]],[[]],[[],[["result",4,["fsnode","fserror"]],["fsnode",8],["fserror",4]]],[[],[["fsfilehandle",8],["result",4,["fsfilehandle","fserror"]],["fserror",4]]],null,null,[[],[["vec",3,["str"]],["str",15]]],[[],["u16",15]],[[["usize",15],["option",4,["usize"]]],[["vec",3,["u8"]],["fserror",4],["result",4,["vec","fserror"]]]],[[["usize",15]],[["result",4,["fserror"]],["fserror",4]]],[[],[["fserror",4],["vec",3,["fsnode"]],["result",4,["vec","fserror"]]]],null,[[],["string",3]],[[],["string",3]],[[["str",15]],[["result",4,["fsnode","fserror"]],["fserror",4],["fsnode",8]]],[[],[["option",4,["fsdirectory"]],["fsdirectory",8]]],[[],[["fsfile",8],["option",4,["fsfile"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],null,null,[[],["simplememoryfsfile",3]],[[["simplememoryfs",3]],["bool",15]],[[["simplememoryfsfile",3]],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],null,[[]],[[]],[[],[["fsroot",8],["option",4,["fsroot"]]]],[[],[["fsroot",8],["option",4,["fsroot"]]]],[[],["str",15]],[[],["str",15]],null,[[["simplememoryfs",3]],["bool",15]],[[["simplememoryfsfile",3]],["bool",15]],[[]],[[],[["fsfilehandle",8],["result",4,["fsfilehandle","fserror"]],["fserror",4]]],null,[[],["u16",15]],[[],["u16",15]],[[["usize",15],["option",4,["usize"]]],[["vec",3,["u8"]],["fserror",4],["result",4,["vec","fserror"]]]],[[["usize",15]],[["result",4,["fserror"]],["fserror",4]]],[[],[["fserror",4],["vec",3,["fsnode"]],["result",4,["vec","fserror"]]]],[[["str",15]],[["result",4,["fsnode","fserror"]],["fserror",4],["fsnode",8]]],[[],[["option",4,["fsdirectory"]],["fsdirectory",8]]],[[],[["option",4,["fsdirectory"]],["fsdirectory",8]]],[[],[["fsfile",8],["option",4,["fsfile"]]]],[[],[["fsfile",8],["option",4,["fsfile"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[],["string",3]],[[["str",15]],["string",3]],[[["str",15]],[["vec",3,["string"]],["string",3]]]],"p":[[4,"FsError"],[4,"MountError"],[3,"FilesystemMountpoint"],[3,"FilesystemBase"],[8,"FsNode"],[8,"FsFile"],[8,"FsFileHandle"],[8,"FsReadDir"],[8,"FsWriteDir"],[13,"StdIoError"],[3,"SimpleMemoryFs"],[3,"SimpleMemoryFsFile"]]},\
"slos_hal":{"doc":"","t":[8,8,8,8,10,10,10,10,11,11,10,10,10,0,10,10,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["SystemConsole","SystemCpu","SystemHardware","SystemKmainHooks","console","current_cpu","halt","has_requested_return","hook_kmain_loop_head","hook_kmain_loop_inner_part","interrupts_are_enabled","interrupts_disable","interrupts_enable","null_console","system_name","virtualization","NULL_CONSOLE","NullConsole","borrow","borrow","borrow_mut","borrow_mut","deref","from","from","initialize","into","into","raw_read","raw_write","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["slos_hal","","","","","","","","","","","","","","","","slos_hal::null_console","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","Current CPU","","Has the HAL has requested an immediate kmain return?","","","","","","","","Virtualization","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,1,2,1,3,3,2,2,2,0,1,1,0,0,4,5,4,5,5,4,5,5,4,5,4,4,4,5,4,5,4,5],"f":[null,null,null,null,[[],["systemconsole",8]],[[],["systemcpu",8]],[[]],[[],["bool",15]],[[]],[[]],[[],["bool",15]],[[]],[[]],null,[[],["str",15]],[[],["option",4]],null,null,[[]],[[]],[[]],[[]],[[],["unsafecontainer",3]],[[]],[[]],[[]],[[]],[[]],[[["usize",15],["option",4,["usize"]]],[["result",4,["vec","fserror"]],["vec",3,["u8"]],["fserror",4]]],[[["usize",15]],[["result",4,["fserror"]],["fserror",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[8,"SystemHardware"],[8,"SystemCpu"],[8,"SystemKmainHooks"],[3,"NullConsole"],[3,"NULL_CONSOLE"]]},\
"slos_helpers":{"doc":"","t":[3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11],"n":["StaticCollection","Timer","UnsafeContainer","as_mut_slice","as_slice","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","default","default","deref","eq","fmt","fmt","fmt","fmt","from","from","from","function","get","in_milliseconds","increment","increment_ms","into","into","into","into_inner","microseconds","new","new","new","partial_cmp","push","replace","seconds","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["slos_helpers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A fixed-size collection.","A time keeper.","Container usable as a static that allows getting a …","Return a mutable slice of the entries within this …","Return a slice of the entries within this collection.","","","","","","","","","","","","","","","","","","","","","Get the name of the current function as a <code>&amp;&#39;static str</code>.","Get a mutable reference to the interior value.","Returns this timer’s total time in milliseconds.","Increment the timer by the given number of microseconds.","Increment the timer by the given number of milliseconds.","","","","Consume this container and return the interior value.","","Create a new container.","Create a new empty <code>StaticCollection</code>.","Create a new timer with it’s values set to zero.","","Add an entry to this collection.","Replace the interior value, returning the old one","","","","","","","","","","","",""],"i":[0,0,0,1,1,2,1,3,2,1,3,3,3,3,2,1,2,3,2,1,3,3,2,1,3,0,2,3,3,3,2,1,3,2,3,2,1,3,3,1,2,3,3,3,2,1,3,2,1,3,2,1,3],"f":[null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["timer",3]],[[]],[[["timer",3]],["ordering",4]],[[],["unsafecontainer",3]],[[],["staticcollection",3]],[[]],[[["timer",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],null,[[]],[[],["u64",15]],[[["u32",15]]],[[["u32",15]]],[[]],[[]],[[]],[[]],null,[[],["unsafecontainer",3]],[[]],[[],["timer",3]],[[["timer",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[]],null,[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"StaticCollection"],[3,"UnsafeContainer"],[3,"Timer"]]},\
"slos_hosted":{"doc":"","t":[0,0,0,3,3,11,11,11,11,0,11,11,11,11,11,11,11,11,12,11,11,11,11,0,11,11,11,12,11,11,12,11,12,12,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,11,11,11,11,11,11,11,11,11,5,5,0,5,5,5,6,3,11,11,0,0,5,11,12,11,11,5,11,11,11,5,5,5,5,5,5,5,5],"n":["hal","host","repl","HostedSystem","SYSTEM","borrow","borrow","borrow_mut","borrow_mut","console","console","current_cpu","default","deref","fmt","from","from","halt","halted","has_requested_return","hook_kmain_loop_head","hook_kmain_loop_inner_part","initialize","interrupts","interrupts_are_enabled","interrupts_disable","interrupts_enable","interrupts_enabled","into","into","kmain_thread","park_if_halted","pending_interrupts","return_next_iter","system_name","try_from","try_from","try_into","try_into","type_id","type_id","virtualization","CONSOLE","Console","borrow","borrow","borrow_mut","borrow_mut","deref","from","from","initialize","into","into","raw_read","raw_write","try_from","try_from","try_into","try_into","type_id","type_id","ClockTick","HostedInterrupt","borrow","borrow_mut","dispatch","fmt","from","into","try_from","try_into","type_id","hosted_kmain","init","interrupts","run_kernel","clock_tick","dispatcher","Callback","Context","borrow","borrow_mut","cmd_basics","cmd_filesystem","default_cmds","from","fs","into","new","run_repl","try_from","try_into","type_id","cmd_echo","cmd_file_read","cmd_file_write_test","cmd_mount_list","cmd_mount_new_memoryfs","cmd_path_join","cmd_path_normalize","cmd_path_split"],"q":["slos_hosted","","","slos_hosted::hal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","slos_hosted::hal::console","","","","","","","","","","","","","","","","","","","","slos_hosted::hal::interrupts","","","","","","","","","","","slos_hosted::host","","","","slos_hosted::host::interrupts","","slos_hosted::repl","","","","","","","","","","","","","","","slos_hosted::repl::cmd_basics","slos_hosted::repl::cmd_filesystem","","","","","",""],"d":["Hosted “hardware” abstraction layer implementation","Hosted slOS kernel","Debugging REPL for parts of slOS","Hosted “hardware” abstraction layer implementation","Global instance of the <code>HostedSystem</code>","","","","","Forwarding to host stdin/stdout","","","","","","","","","Whether the hosted machine is halted until the next …","","","","","Virtual interrupts","","","","Whether interrupts are enabled","","","kmain <code>std::thread::Thread</code>","If halted, and current thread is kmain, park thread","Queue of pending interrupts","Whether to make kmain return in its next iteration","","","","","","","","","Global <code>Console</code> instance","Hosted <code>SystemConsole</code> implementation","","","","","","","","","","","","","","","","","","","Clock tick interrupt","A virtual interrupt","","","Perform handling for <code>self</code> as an interrupt","","","","","","","Run <code>slos::kmain</code> in our hosted environment","Initialize the environment for the hosted kernel","Virtual interrupt handlers","Start the hosted kernel","Update the system clock and queue tick interrupts","Dispatch virtual interrupts, if enabled","REPL command callback type, where <code>T</code> is the command context","Default command context type","","","Basic command set","Filesystem command set","Default commands, using <code>Context</code> as the command context","","Filesystem","","","Run the REPL with the given command list","","","","Echo the given arguments back to the console","Read the contents of the given file","Write the string <code>&quot;hello world!&quot;</code> to the given file","Print the list of currently mounted filesystems","Mount a new <code>SimpleMemoryFs</code> on the given path","Print a joined path","Print a normalized path","Debug print a split path"],"i":[0,0,0,0,0,1,2,1,2,0,2,2,2,1,2,1,2,2,2,2,2,2,1,0,2,2,2,2,1,2,2,2,2,2,2,1,2,1,2,1,2,2,0,0,3,4,3,4,4,3,4,4,3,4,3,3,3,4,3,4,3,4,5,0,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,6,6,0,0,0,6,6,6,6,0,6,6,6,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[],["systemconsole",8]],[[],["systemcpu",8]],[[]],[[],["unsafecontainer",3]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],null,[[],["bool",15]],[[]],[[]],[[]],null,[[],["bool",15]],[[]],[[]],null,[[]],[[]],null,[[]],null,null,[[],["str",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],null,null,[[]],[[]],[[]],[[]],[[],["unsafecontainer",3]],[[]],[[]],[[]],[[]],[[]],[[["usize",15],["option",4,["usize"]]],[["result",4,["vec","fserror"]],["vec",3,["u8"]],["fserror",4]]],[[["usize",15]],[["fserror",4],["result",4,["fserror"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["result",6]],[[["option",4,["pathbuf"]],["string",3],["pathbuf",3]],["result",6]],null,[[],["result",6]],[[]],[[["thread",3]]],null,null,[[]],[[]],null,null,[[],[["hashmap",3,["string","hashmap"]],["hashmap",3,["string","box"]],["string",3]]],[[]],null,[[]],[[]],[[["hashmap",3,["string","box"]],["hashmap",3,["string","hashmap"]],["string",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["context",3]],["result",6]],[[["context",3]],["result",6]],[[["context",3]],["result",6]],[[["context",3]],["result",6]],[[["context",3]],["result",6]],[[["context",3]],["result",6]],[[["context",3]],["result",6]],[[["context",3]],["result",6]]],"p":[[3,"SYSTEM"],[3,"HostedSystem"],[3,"Console"],[3,"CONSOLE"],[4,"HostedInterrupt"],[3,"Context"]]},\
"slos_log":{"doc":"","t":[14,14,14,14,14,14],"n":["debug","error","info","log","trace","warn"],"q":["slos_log","","","","",""],"d":["Log a debug message","Log an error message","Log an info message","Log a message with a given level","Log a trace message","Log a warning message"],"i":[0,0,0,0,0,0],"f":[null,null,null,null,null,null],"p":[]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};